{
	"label": "Макросы PF2e",
	"mapping": {
		"command": "command"
		},
	"entries": [
		{
			"id": "Earn Income",
			"name": "Earn Income"
		},
		{
			"id": "Perception For Selected Tokens",
			"name": "Perception For Selected Tokens"
		},
		{
			"id": "Rest for the Night",
			"name": "Rest for the Night"
		},
		{
			"id": "Stealth For Selected Tokens",
			"name": "Stealth For Selected Tokens"
		},
		{
			"id": "Take a Breather",
			"name": "Take a Breather"
		},
		{
			"id": "Toggle Compendium Browser",
			"name": "Toggle Compendium Browser"
		},
		{
			"id": "Travel Duration",
			"name": "Travel Duration"
		},
		{
			"id": "Treat Wounds",
			"name": "Лечение Ран",
			"command": "function CheckFeat(slug) {\n    if (token.actor.items.find((i) => i.data.data.slug === slug && i.type === \"feat\")) {\n        return true;\n    }\n    return false;\n}\nconst rollTreatWounds = async ({ DC, bonus, med, riskysurgery, mortalhealing }) => {\n    const options = actor.getRollOptions([\"all\", \"skill-check\", \"medicine\"]);\n    options.push(\"treat wounds\");\n    options.push(\"action:treat-wounds\");\n    const dc = {\n        value: DC,\n        visibility: \"all\",\n    };\n    if (riskysurgery || mortalhealing) {\n        dc.modifiers = {\n            success: \"one-degree-better\",\n        };\n    }\n    if (riskysurgery) {\n        options.push(\"risky-surgery\");\n    }\n    med.roll({\n        dc: dc,\n        event: event,\n        options: options,\n        callback: async (roll) => {\n            let healFormula, successLabel;\n            const magicHands = CheckFeat(\"magic-hands\");\n            const bonusString = bonus > 0 ? `+ ${bonus}` : \"\";\n            if (roll.data.degreeOfSuccess === 3) {\n                healFormula = magicHands ? `32${bonusString}` : `4d8${bonusString}`;\n                successLabel = \"Critical Success\";\n            } else if (roll.data.degreeOfSuccess === 2) {\n                healFormula = magicHands ? `16${bonusString}` : `2d8${bonusString}`;\n                successLabel = \"Success\";\n            } else if (roll.data.degreeOfSuccess === 1) {\n                successLabel = \"Failure\";\n            } else if (roll.data.degreeOfSuccess === 0) {\n                healFormula = \"1d8\";\n                successLabel = \"Critical Failure\";\n            }\n            if (riskysurgery) {\n                ChatMessage.create({\n                    user: game.user.id,\n                    type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                    flavor: `<strong>Урон: Риск.Операции</strong>`,\n                    roll: await new Roll(\"{1d8}[slashing]\").roll({ async: true }),\n                    speaker: ChatMessage.getSpeaker(),\n                });\n            }\n            if (healFormula !== undefined) {\n                const healRoll = await new Roll(`{${healFormula}}[healing]`).roll({ async: true });\n                const rollType = roll.data.degreeOfSuccess > 1 ? \"Healing\" : \"Damage\";\n                ChatMessage.create({\n                    user: game.user.id,\n                    type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                    flavor: `<strong>${rollType} Roll: Treat Wounds</strong> (${successLabel})`,\n                    roll: healRoll,\n                    speaker: ChatMessage.getSpeaker(),\n                });\n            }\n        },\n    });\n};\nasync function applyChanges($html) {\n    for (const token of canvas.tokens.controlled) {\n        var med = token.actor.data.data.skills.med;\n        if (!med) {\n            ui.notifications.warn(`Token ${token.name} does not have the medicine skill`);\n            continue;\n        }\n        const { name } = token;\n        const mod = parseInt($html.find('[name=\"modifier\"]').val()) || 0;\n        const requestedProf = parseInt($html.find('[name=\"dc-type\"]')[0].value) || 1;\n        const riskysurgery = $html.find('[name=\"risky_surgery_bool\"]')[0]?.checked;\n        const mortalhealing = $html.find('[name=\"mortal_healing_bool\"]')[0]?.checked;\n        const skill = $html.find('[name=\"skill\"]')[0]?.value;\n        // Handle Rule Interpretation\n        if (game.user.isGM) {\n            await game.settings.set(\n                \"pf2e\",\n                \"RAI.TreatWoundsAltSkills\",\n                $html.find('[name=\"strict_rules\"]')[0]?.checked\n            );\n        }\n        var usedProf = 0;\n        if (game.settings.get(\"pf2e\", \"RAI.TreatWoundsAltSkills\")) {\n            if (skill === \"cra\") {\n                med = token.actor.data.data.skills[\"cra\"];\n            }\n            if (skill === \"nat\") {\n                med = token.actor.data.data.skills[\"nat\"];\n            }\n            usedProf = requestedProf <= med.rank ? requestedProf : med.rank;\n        } else {\n            usedProf = requestedProf <= med.rank ? requestedProf : med.rank;\n            if (skill === \"cra\") {\n                med = token.actor.data.data.skills[\"cra\"];\n            }\n            if (skill === \"nat\") {\n                med = token.actor.data.data.skills[\"nat\"];\n                if (usedProf === 0) {\n                    usedProf = 1;\n                }\n            }\n        }\n        const medicBonus = CheckFeat(\"medic-dedication\") ? (usedProf - 1) * 5 : 0;\n        const roll = [\n            () => ui.notifications.warn(`${name} is not trained in Medicine and doesn't know how to treat wounds.`),\n            () => rollTreatWounds({ DC: 15 + mod, bonus: 0 + medicBonus, med, riskysurgery, mortalhealing }),\n            () => rollTreatWounds({ DC: 20 + mod, bonus: 10 + medicBonus, med, riskysurgery, mortalhealing }),\n            () => rollTreatWounds({ DC: 30 + mod, bonus: 30 + medicBonus, med, riskysurgery, mortalhealing }),\n            () => rollTreatWounds({ DC: 40 + mod, bonus: 50 + medicBonus, med, riskysurgery, mortalhealing }),\n        ][usedProf];\n        roll();\n    }\n}\nif (token === undefined) {\n    ui.notifications.warn(\"No token is selected.\");\n} else {\n    const chirurgeon = CheckFeat(\"chirurgeon\");\n    const naturalMedicine = CheckFeat(\"natural-medicine\");\n    const dialog = new Dialog({\n        title: \"Treat Wounds\",\n        content: `\n<div>Выберите КС. Помните, что вы не можете пытаться лечить выше своего мастерства. Попытка сделать это понизит КС и кол-во ОЗ до самого высокого уровня мастерства, на который вы способны.</div>\n<hr/>\n${\n    chirurgeon || naturalMedicine\n        ? `\n<form>\n<div class=\"form-group\">\n<label>Treat Wounds Skill:</label>\n<select id=\"skill\" name=\"skill\">\n<option value=\"med\">Medicine</option>\n${chirurgeon ? `<option value=\"cra\">Crafting</option>` : ``}\n${naturalMedicine ? `<option value=\"nat\">Nature</option>` : ``}\n</select>\n</div>\n</form>\n`\n        : ``\n}\n<form>\n<div class=\"form-group\">\n<label>Медицина КС:</label>\n<select id=\"dc-type\" name=\"dc-type\">\n<option value=\"1\">Обучен КС15</option>\n<option value=\"2\">Эксперт КС 20, +10 ОЗ</option>\n<option value=\"3\">Мастер КС 30, +30 ОЗ</option>\n<option value=\"4\">Легенда КС40, +50 ОЗ</option>\n</select>\n</div>\n</form>\n<form>\n<div class=\"form-group\">\n<label>Мод. КС</label>\n<input id=\"modifier\" name=\"modifier\" type=\"number\"/>\n</div>\n</form>\n${\n    CheckFeat(\"risky-surgery\")\n        ? `<form><div class=\"form-group\">\n<label>Рискованная Операция</label>\n<input type=\"checkbox\" id=\"risky_surgery_bool\" name=\"risky_surgery_bool\"></input>\n</div></form>`\n        : ``\n}\n${\n    CheckFeat(\"mortal-healing\")\n        ? `<form><div class=\"form-group\">\n<label>Mortal Healing</label>\n<input type=\"checkbox\" id=\"mortal_healing_bool\" name=\"mortal_healing_bool\" checked></input>\n</div></form>`\n        : ``\n}\n${\n    game.user.isGM\n        ? `<form><div class=\"form-group\">\n<label>Разрешить повышение КС от заменяющих навыков?</label>\n<input type=\"checkbox\" id=\"strict_rules\" name=\"strict_rules\"` +\n          (game.settings.get(\"pf2e\", \"RAI.TreatWoundsAltSkills\") ? ` checked` : ``) +\n          `></input>\n</div></form>`\n        : ``\n}\n</form>\n`,\n        buttons: {\n            yes: {\n                icon: `<i class=\"fas fa-hand-holding-medical\"></i>`,\n                label: \"Лечение Ран\",\n                callback: applyChanges,\n            },\n            no: {\n                icon: `<i class=\"fas fa-times\"></i>`,\n                label: \"Отмена\",\n            },\n        },\n        default: \"yes\",\n    });\n    dialog.render(true);\n}"
		},
		{
			"id": "XP",
			"name": "XP"
		}
	]
}